version: '3.4'

services:
  appdb:
    container_name: appdb
    restart: always
    ports:
      - ${DB_PORT}:5432
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - appdb-data:/var/lib/postgresql/data

  redis-db:
    restart: always
    image: redis
    container_name: redis-db
    ports:
      - 6379:6379
    volumes:
      - "redis-db-data:/data"

  rabbitmq:
    container_name: rabbitmq
    restart: always
    ports:
      - 5672:5672
      - 15672:15672 

  pgadmin:
    restart: always
    container_name: pgadmin
    ports:
      - ${PGA_PORT}:80
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGA_EMAIL} 
      PGADMIN_DEFAULT_PASSWORD: ${PGA_PASSWORD} 
  
  auth.api:
    container_name: auth.api
    depends_on:
      - appdb
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "ConnectionStrings:DB=Host=${DB_HOST}:${DB_PORT};Database=${DB_NAME};Username=${DB_USER};Password=${DB_PASSWORD}"
      - "EventBusSettings:HostAddress=${RABBITMQ_URL}"
    ports:
      - "8001:3001"

  meals.api:
    container_name: meals.api
    depends_on:
      - appdb
      - rabbitmq
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "ConnectionStrings:DB=Host=${DB_HOST}:${DB_PORT};Database=${DB_NAME};Username=${DB_USER};Password=${DB_PASSWORD}"
      - "EventBusSettings:HostAddress=${RABBITMQ_URL}"
    ports:
      - "8003:3003"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro

  posts.api:
    container_name: posts.api
    depends_on:
      - appdb
      - rabbitmq
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "ConnectionStrings:DB=Host=${DB_HOST}:${DB_PORT};Database=${DB_NAME};Username=${DB_USER};Password=${DB_PASSWORD}"
      - "EventBusSettings:HostAddress=${RABBITMQ_URL}"
    ports:
      - "8004:3004"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro

  comments.api:
    container_name: comments.api
    depends_on:
      - appdb
      - rabbitmq
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "ConnectionStrings:DB=Host=${DB_HOST}:${DB_PORT};Database=${DB_NAME};Username=${DB_USER};Password=${DB_PASSWORD}"
      - "EventBusSettings:HostAddress=${RABBITMQ_URL}"
    ports:
      - "8006:3006"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro

  users.api:
    container_name: users.api
    depends_on:
      - appdb
      - rabbitmq
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "ConnectionStrings:DB=Host=${DB_HOST}:${DB_PORT};Database=${DB_NAME};Username=${DB_USER};Password=${DB_PASSWORD}"
      - "EventBusSettings:HostAddress=${RABBITMQ_URL}"
    ports:
      - "8005:3005"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro

  follows.api:
    container_name: follows.api
    depends_on:
      - appdb
      - rabbitmq
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "ConnectionStrings:DB=Host=${DB_HOST}:${DB_PORT};Database=${DB_NAME};Username=${DB_USER};Password=${DB_PASSWORD}"
      - "EventBusSettings:HostAddress=${RABBITMQ_URL}"
    ports:
      - "8002:3002"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro

  admin.api-gw:
    container_name: admin.api-gw 
    depends_on:
      - auth.api
      - meals.api
      - posts.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    ports:
      - "9001:4001"

  web.api-gw:
    container_name: web.api-gw 
    depends_on:
      - auth.api
      - meals.api
      - posts.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    ports:
      - "9002:4002"

  nginx:
    container_name: nginx
    depends_on:
      - auth.api
      - meals.api
      - posts.api
      - users.api
    environment:
      - NGINX_CLIENT_URL=${NGINX_CLIENT_URL}
    ports:
      - "80:80"